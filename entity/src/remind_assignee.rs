//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "remind_assignee")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u32,
	pub user_id: u64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::remind::Entity")]
	Remind,
	#[sea_orm(
		belongs_to = "super::user_data::Entity",
		from = "Column::UserId",
		to = "super::user_data::Column::Uid",
		on_update = "Cascade",
		on_delete = "Cascade"
	)]
	UserData,
}

impl Related<super::remind::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Remind.def()
	}
}

impl Related<super::user_data::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserData.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
